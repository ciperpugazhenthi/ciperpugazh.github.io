var WebarSdkSurface=pc.createScript("WebarSdkSurface");WebarSdkSurface.attributes.add("webarSdkCamera",{title:"Webar Camera",type:"entity"}),WebarSdkSurface.attributes.add("webarSdkStage",{title:"Webar Stage",type:"entity"}),WebarSdkSurface.prototype.initialize=function(){WEBARSDK.InitPlayCanvas("application-canvas",this.webarSdkCamera,this.webarSdkStage)};var VideoTexture=pc.createScript("videoTexture");VideoTexture.attributes.add("videoAsset",{title:"Video Asset",description:"MP4 video asset to play back on this video texture.",type:"asset"}),VideoTexture.attributes.add("videoUrl",{title:"Video Url",description:"URL to use if there is video asset selected",type:"string"}),VideoTexture.attributes.add("playEvent",{title:"Play Event",description:"Event that is fired as soon as the video texture is ready to play.",type:"string",default:""}),VideoTexture.prototype.initialize=function(){var e=this.app,t=document.createElement("video");t.loop=!0,t.muted=!0,t.playsInline=!0,t.crossOrigin="anonymous",t.autoplay=!0;var i=t.style;i.width="1px",i.height="1px",i.position="absolute",i.opacity="0",i.zIndex="-1000",i.pointerEvents="none",document.body.appendChild(t),this.videoTexture=new pc.Texture(e.graphicsDevice,{format:pc.PIXELFORMAT_R8_G8_B8,minFilter:pc.FILTER_LINEAR_MIPMAP_LINEAR,magFilter:pc.FILTER_LINEAR,addressU:pc.ADDRESS_CLAMP_TO_EDGE,addressV:pc.ADDRESS_CLAMP_TO_EDGE,mipmaps:!0}),this.videoTexture.setSource(t),t.addEventListener("canplaythrough",function(i){e.fire(this.playEvent,this.videoTexture),t.play()}.bind(this)),t.src=this.videoAsset?this.videoAsset.getFileUrl():this.videoUrl,document.body.appendChild(t),t.load(),this.on("destroy",(function(){this.videoTexture.destroy(),t.remove()}),this)},VideoTexture.prototype.update=function(e){this.videoTexture.upload()};var SphereRender=pc.createScript("sphereRender");SphereRender.attributes.add("screenMaterial",{title:"Screen Material",description:"The screen material of the TV that displays the video texture.",type:"asset",assetType:"material"}),SphereRender.attributes.add("playEvent",{title:"Play Event",description:"Set the TV screen material emissive map on this event.",type:"string",default:""}),SphereRender.prototype.initialize=function(){this.app.on(this.playEvent,(function(e){var t=this.screenMaterial.resource;t.emissiveMap=e,t.update()}),this)},SphereRender.prototype.update=function(e){};var StencilMask=pc.createScript("stencilMask");StencilMask.attributes.add("maskID",{title:"Mask ID",description:"This mask id should be an integer between 0 and 7, as it relates as the power of 2 to the actual mask id.",type:"number",default:0,min:0,max:7,precision:0}),StencilMask.prototype.initialize=function(){this._setStencil(),this.on("attr",this._attributeReloading)},StencilMask.prototype._setStencil=function(){var t=Math.pow(2,this.maskID),e=new pc.StencilParameters({readMask:t,writeMask:t,ref:t,zpass:pc.STENCILOP_REPLACE});this._setModelAsStencil(e)},StencilMask.prototype._setModelAsStencil=function(t){var e=null;if(this.entity.render&&(e=this.entity.render.meshInstances),this.entity.model&&(e=this.entity.model.meshInstances),e&&e.length>0){var i=e[0].material.clone();i.stencilBack=i.stencilFront=t,i.redWrite=i.greenWrite=i.blueWrite=i.alphaWrite=!1,e[0].material=i,i.update()}},StencilMask.prototype.swap=function(t){this.on("attr",this._attributeReloading)},StencilMask.prototype._attributeReloading=function(t,e,i){this._setStencil()};var StencilSubject=pc.createScript("stencilSubject");StencilSubject.attributes.add("showInside",{title:"Show",description:"Determines whether this entity will be shown inside or outside of a mask with the given ID.\nIf multiple ID's are passed: \n- If 'Inside' is chosen, only the parts which are inside all of the given IDs will be shown.\n- If 'Outside' is chosen, the parts which are outside any of the given IDs will be shown.\n",type:"boolean",default:!0,enum:[{Inside:!0},{Outside:!1}]}),StencilSubject.attributes.add("maskIDs",{title:"Mask IDs",description:"These ID's have to be between 0 and 7.",type:"number",array:!0,default:[0]}),StencilSubject.prototype.postInitialize=function(){var t=0,e=0;this._meshInstances=[];var s=this.entity.findComponents("render");for(t=0;t<s.length;++t)for(meshInstances=s[t].meshInstances,e=0;e<meshInstances.length;e++)this._meshInstances.push(meshInstances[e]);var n=this.entity.findComponents("model");for(t=0;t<n.length;++t)for(meshInstances=n[t].meshInstances,e=0;e<meshInstances.length;e++)this._meshInstances.push(meshInstances[e]);this._setStencil(),this.app.on("setsubjectstencil",(function(t){console.log("sphere shader click"),this.showInside=t,this._setStencil()}),this),this.on("attr",this._attributeReloading)},StencilSubject.prototype._setStencil=function(){if(this._addMaskIDs()){var t=new pc.StencilParameters({readMask:this.maskID,writeMask:this.maskID,ref:this.maskID,func:this.showInside?pc.FUNC_EQUAL:pc.FUNC_NOTEQUAL});this._setStencilForModel(t),this._setStencilForParticle(t),this._setStencilForSpine(t),this._setStencilForSprite(t)}},StencilSubject.prototype._addMaskIDs=function(){if(this.maskID=0,this.maskIDs.length>8)return!1;for(var t=0;t<this.maskIDs.length;++t){var e=Math.floor(this.maskIDs[t]);if(!(e>=0&&e<8))return!1;this.maskID+=Math.pow(2,e)}return!0},StencilSubject.prototype._setStencilForModel=function(t){for(var e=0;e<this._meshInstances.length;e++){this._meshInstances[e].layer=pc.LAYER_WORLD-1;var s=this._meshInstances[e].material.clone();s.stencilBack=s.stencilFront=t,this._meshInstances[e].material=s}},StencilSubject.prototype._setStencilForParticle=function(t){if(this.entity.particlesystem){this.entity.particlesystem.emitter.meshInstance.layer=pc.LAYER_WORLD-1;var e=this.entity.particlesystem.emitter.material;e.stencilBack=e.stencilFront=t}},StencilSubject.prototype._setStencilForSpine=function(t){if(this.entity.spine){this.entity.spine.spine._model;for(var e=0;e<this._meshInstances.length;e++){this._meshInstances[e].layer=pc.LAYER_WORLD-1;var s=this._meshInstances[e].material;s.stencilBack=s.stencilFront=t}}},StencilSubject.prototype._setStencilForSprite=function(t){if(this.entity.sprite){var e=this.entity.sprite._model;e.meshInstances[0].layer=pc.LAYER_WORLD-1;var s=e.meshInstances[0].material.clone();s.stencilBack=s.stencilFront=t,e.meshInstances[0].material=s}},StencilSubject.prototype.swap=function(t){this.on("attr",this._attributeReloading)},StencilSubject.prototype._attributeReloading=function(t,e,s){this._setStencil()};var VideoPlayTesting=pc.createScript("videoPlayTesting");function example(e){const t=new pc.Application(e,{}),n={tv:new pc.Asset("tv","container",{url:"/static/assets/models/tv.glb"})};new pc.AssetListLoader(Object.values(n),t.assets).load((()=>{t.start(),t.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW),t.setCanvasResolution(pc.RESOLUTION_AUTO),t.scene.ambientLight=new pc.Color(.2,.2,.2);const e=new pc.Entity;e.addComponent("camera",{clearColor:new pc.Color(.4,.45,.5)}),e.translate(0,0,15);const o=new pc.Entity;o.addComponent("light",{type:"omni",color:new pc.Color(1,1,1),range:30}),o.translate(5,5,10),t.root.addChild(e),t.root.addChild(o);const a=new pc.Texture(t.graphicsDevice,{format:pc.PIXELFORMAT_RGB565,mipmaps:!1,minFilter:pc.FILTER_LINEAR,magFilter:pc.FILTER_LINEAR,addressU:pc.ADDRESS_CLAMP_TO_EDGE,addressV:pc.ADDRESS_CLAMP_TO_EDGE}),i=document.createElement("video");i.id="vid",i.loop=!0,i.muted=!0,i.autoplay=!0,i.playsInline=!0,i.crossOrigin="anonymous",i.setAttribute("style","display: block; width: 1px; height: 1px; position: absolute; opacity: 0; z-index: -1000; top: 0px; pointer-events: none"),i.src="/static/assets/Video/Sample360Video.mp4",document.body.append(i),i.addEventListener("canplaythrough",(function(){a.setSource(i)}));const s=n.tv.resource.instantiateRenderEntity();t.root.addChild(s);const c=new pc.StandardMaterial;c.useLighting=!1,c.emissiveMap=a,c.update(),s.render.meshInstances[1].material=c,i.load();new pc.Mouse(document.body).on("mousedown",(function(e){s&&e.buttons[pc.MOUSEBUTTON_LEFT]&&(i.muted=!i.muted)}));let p=!1,d=0;t.on("update",(function(e){d+=e,s.setLocalEulerAngles(100+50*Math.sin(d),0,-90),p=!p,p&&a.upload()}))}))}VideoPlayTesting.prototype.initialize=function(){},VideoPlayTesting.prototype.update=function(e){};var CollisionDetector=pc.createScript("collisionDetector");CollisionDetector.attributes.add("_360sphere",{title:"World",type:"entity"}),CollisionDetector.attributes.add("eventName",{type:"string",title:"Event Name"}),CollisionDetector.attributes.add("stencilval",{type:"boolean",title:"Sphere Setter"}),CollisionDetector.prototype.initialize=function(){this.entity.collision.on("triggerenter",this.onTriggerEnter,this)},CollisionDetector.prototype.update=function(t){},CollisionDetector.prototype.onTriggerEnter=function(t){1==t.tags.has("player")&&(console.log("trying to get value and collided obj is "+t.name),console.log("sphere name is"),this.app.fire(this.eventName,this.stencilval))};var ButtonAction=pc.createScript("buttonAction");ButtonAction.attributes.add("eventName",{type:"string",title:"Event Name"}),ButtonAction.attributes.add("stencilval",{type:"boolean",title:"Sphere Setter"}),ButtonAction.prototype.initialize=function(){this.entity.button.on("click",(function(){this.app.fire(this.eventName,this.stencilval)}),this)},ButtonAction.prototype.initialize=function(){},ButtonAction.prototype.update=function(t){};

//# sourceMappingURL=__game-scripts.js.map